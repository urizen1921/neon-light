{"ast":null,"code":"var _jsxFileName = \"/home/urizen1921/Documents/gitHubProjects/neon-lights/neon/client/src/routes/private-route.jsx\";\nimport React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuth } from '../helpers/auth';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => isAuth() ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: '/login',\n      state: {\n        from: props.location\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}));\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/home/urizen1921/Documents/gitHubProjects/neon-lights/neon/client/src/routes/private-route.jsx"],"names":["React","Component","Route","Redirect","isAuth","PrivateRoute","component","rest","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEL,SAAb;AAAwB,KAAGM;AAA3B,CAAD,kBACjB,oBAAC,KAAD,oBACQA,IADR;AAEI,EAAA,MAAM,EAAEC,KAAK,IACTJ,MAAM,kBACF,oBAAC,SAAD,oBAAeI,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADE,gBAGF,oBAAC,QAAD;AACI,IAAA,EAAE,EAAE;AACAC,MAAAA,QAAQ,EAAE,QADV;AAEAC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAFP,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADJ;;AAkBA,eAAeP,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuth } from '../helpers/auth';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuth() ? (\n                <Component {...props} />\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: '/login',\n                        state: { from: props.location }\n                    }}\n                />\n            )\n        }\n    ></Route>\n);\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}